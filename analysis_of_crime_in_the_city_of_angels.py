# -*- coding: utf-8 -*-
"""Analysis of Crime in The City of Angels.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AyZx3FPFBBjecVXZeymTPTpe7K5jGsDF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**connect and read data**"""

from google.colab import drive
drive.mount('/content/drive')

file_path = '/content/drive/MyDrive/My data analysis projects/Crime Data.csv'

# Read the CSV file into a DataFrame
df = pd.read_csv(file_path)

"""**EDA**"""

df.info()
df.head(10)
df.shape

"""**The hour with the highest frequency of crimes**

"""

#text output
df['TIME OCC'] = df['TIME OCC'].astype(str).str.zfill(4)  # Ensure the time is in 'HHMM' format
df['Hour'] = df['TIME OCC'].str[:2].astype(int)  # Extract the hour part

#Count the number of crimes for each hour
hourly_crime_counts = df['Hour'].value_counts().sort_index()

#Find the hour with the highest frequency of crimes
most_frequent_hour = hourly_crime_counts.idxmax()



print(f"The hour with the highest frequency of crimes is: {most_frequent_hour}")

#visualized output
df['Hour'] = df['TIME OCC'].str[:2].astype(int)

# plot the counts of crimes for each hour value
sns.set_style("darkgrid")
sns.color_palette("RdPu", 10)
sns.set_context("notebook")
sns.countplot(data=df, x="Hour")
plt.title('Crimes by The Hour of The Day')
plt.xlabel('Hour')
plt.ylabel('Number of Incidents')
plt.show()

"""**Look at the crimes occurred during night time and see which area has the largest frequency of crimes committed between 10 pm and 3:59 am.**"""

#Ensure 'TIME OCC' is in 'HHMM' format
df['TIME OCC'] = df['TIME OCC'].astype(str).str.zfill(4)  # Ensure 'TIME OCC' is in 'HHMM' format

# Filter for night crimes (between 10 PM and 3:59 AM)
night_crimes = df[(df['TIME OCC'] >= '2200') | (df['TIME OCC'] <= '0359')]

#Count the number of night crimes per area
area_crime_counts = night_crimes['AREA NAME'].value_counts()

#Find the area with the largest frequency of night crimes
most_frequent_area = area_crime_counts.idxmax()
most_frequent_area_count = area_crime_counts.max()


print(f"The largest frequency of night crimes is: {most_frequent_area_count} in Area:  {most_frequent_area}")

#visualized ouput

#filter data by night hours
peak_hours = df[df["Hour"].isin([22, 23, 0, 1, 2, 3]) ]

#plot crime frequency during night time and color by area
sns.countplot(data=peak_hours, x="AREA NAME", order=df['AREA NAME'].value_counts().index)

#rotate the area names so that they will be readable on the plot
plt.xticks(rotation=90)
plt.title('Night Time (10 pm - 4 am) Crimes by The Area')
plt.xlabel('Area Name')
plt.ylabel('Number of Incidents')
plt.show()

"""**Explore the crimes against victimsâ€™ ages**

"""

#Define function to categorize age into groups
def age_group(age):
    if pd.isna(age):
        return 'Unknown'
    elif 0 <= age <= 17:
        return '0-17'
    elif 18 <= age <= 25:
        return '18-25'
    elif 26 <= age <= 34:
        return '26-34'
    elif 35 <= age <= 44:
        return '35-44'
    elif 45 <= age <= 54:
        return '45-54'
    elif 55 <= age <= 64:
        return '55-64'
    else:
        return '65+'

#Apply the function to create a new column for age groups
df["Age Group"] = df['Vict Age'].apply(age_group)

#Count the number of crimes for each age group
age_group_counts = df["Age Group"].value_counts()

print(age_group_counts)

#visualized output

# plot the counts of crimes for each victim age group

sns.countplot(data=df, x="Age Group")
plt.title('Crimes by The Victims'' Ages')
plt.xlabel('Age Group')
plt.ylabel('Number of Incidents')
plt.show()